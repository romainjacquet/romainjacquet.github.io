<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Deep in the system</title><link href="https://romainjacquet.github.io/" rel="alternate"></link><link href="https://romainjacquet.github.io/feeds/all.atom.xml" rel="self"></link><id>https://romainjacquet.github.io/</id><updated>2019-04-24T20:13:00+02:00</updated><entry><title>Branch indexing failure in Jenkins</title><link href="https://romainjacquet.github.io/branch-indexing-failure-in-jenkins.html" rel="alternate"></link><published>2019-04-24T20:13:00+02:00</published><updated>2019-04-24T20:13:00+02:00</updated><author><name>Romain JACQUET</name></author><id>tag:romainjacquet.github.io,2019-04-24:/branch-indexing-failure-in-jenkins.html</id><summary type="html">&lt;p&gt;corrupted git config files lead to branch indexing failure&lt;/p&gt;</summary><content type="html">&lt;p&gt;As usual, CI/CD anomalies are always a source for blogging. And also a 
way of improving the reliability of the CI system. A user
has complained of Jenkins branch indexing failure. The branch indexing is a feature of
&lt;a href="https://jenkins.io/doc/book/pipeline/multibranch/"&gt;Multibranch pipeline&lt;/a&gt; that discover new branches
and delete old branches. 
Instead of index branches, the user got a fancy java stack :-). &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;java.lang.IllegalArgumentException: Repository config file /home/jenkins/caches/git-46ca6ff4bea60131b71f18bc70a1dd5f/.git/config invalid Cannot read file /home/jenkins/caches/git-46ca6ff4bea60131b71f18bc70a1dd5f/.git/config
    at org.eclipse.jgit.lib.BaseRepositoryBuilder.loadConfig(BaseRepositoryBuilder.java:687)
    at org.eclipse.jgit.lib.BaseRepositoryBuilder.getConfig(BaseRepositoryBuilder.java:662)
    at org.eclipse.jgit.lib.BaseRepositoryBuilder.guessWorkTreeOrFail(BaseRepositoryBuilder.java:698)
    at org.eclipse.jgit.lib.BaseRepositoryBuilder.setupWorkTree(BaseRepositoryBuilder.java:628)
    at org.eclipse.jgit.lib.BaseRepositoryBuilder.setup(BaseRepositoryBuilder.java:557)
    at org.eclipse.jgit.storage.file.FileRepositoryBuilder.build(FileRepositoryBuilder.java:92)
    at org.eclipse.jgit.storage.file.FileRepositoryBuilder.create(FileRepositoryBuilder.java:111)
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.getRepository(CliGitAPIImpl.java:2336)
    at hudson.plugins.git.GitAPI.getRepository(GitAPI.java:269)
    at jenkins.plugins.git.AbstractGitSCMSource.retrieve(AbstractGitSCMSource.java:234)
    at jenkins.scm.api.SCMSource.fetch(SCMSource.java:148)
    at jenkins.branch.MultiBranchProject.computeChildren(MultiBranchProject.java:294)
    at com.cloudbees.hudson.plugins.folder.computed.ComputedFolder.updateChildren(ComputedFolder.java:157)
    at com.cloudbees.hudson.plugins.folder.computed.FolderComputation.run(FolderComputation.java:122)
    at hudson.model.ResourceController.execute(ResourceController.java:98)
    at hudson.model.Executor.run(Executor.java:404)
Finished: FAILURE
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Checking the config file shows a corruption. This file is a classic git file that you 
have when you clone a repository. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    url = ssh://user@tuleap/repo.git
[remote &amp;quot;origin&amp;quot;]
    url = ssh://user@tuleap/repo.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first line shoud be included in a remote
section. Having two remote sections in git is common but not for CI usage.
I wrote a script to detect broken config:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nv"&gt;GIT_CONFIG_FILES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;find /home/jenkins/caches -mindepth &lt;span class="m"&gt;3&lt;/span&gt; -maxdepth &lt;span class="m"&gt;3&lt;/span&gt; -name config&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; f in &lt;span class="nv"&gt;$GIT_CONFIG_FILES&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="nv"&gt;FIRST_LINE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;head -n &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$FIRST_LINE&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[core]&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;then&lt;/span&gt;
                &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;------------------------------------------------------&amp;quot;&lt;/span&gt;
                &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Suspicious config file &lt;/span&gt;&lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
                head &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
                &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$((&lt;/span&gt;i+1&lt;span class="k"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Found &lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="s2"&gt; suspicious files&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Fixing the file is easy.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add the missing lines by reading the beginning of the file in a fresh clone;&lt;/li&gt;
&lt;li&gt;Remove the first line which is obviously invalid;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The correct config file is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[core]&lt;/span&gt;
    &lt;span class="na"&gt;repositoryformatversion&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;0&lt;/span&gt;
&lt;span class="s"&gt;    filemode = true&lt;/span&gt;
&lt;span class="s"&gt;    bare = false&lt;/span&gt;
&lt;span class="s"&gt;    logallrefupdates = true&lt;/span&gt;
&lt;span class="k"&gt;[remote &amp;quot;origin&amp;quot;]&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;ssh://user@tuleap/repo.git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I'm still wondering who has corrupted the files. The strange thing is that 
JGIT is visible in  the stack even if my job was supposed to use the git client 
configuration. &lt;/p&gt;</content></entry><entry><title>Fix mixed-language UI in firefox</title><link href="https://romainjacquet.github.io/fix-mixed-language-ui-in-firefox.html" rel="alternate"></link><published>2019-04-17T21:50:00+02:00</published><updated>2019-04-17T21:50:00+02:00</updated><author><name>Romain JACQUET</name></author><id>tag:romainjacquet.github.io,2019-04-17:/fix-mixed-language-ui-in-firefox.html</id><summary type="html">&lt;p&gt;firefox language problem&lt;/p&gt;</summary><content type="html">&lt;p&gt;My company is using an &lt;a href="https://en.wikipedia.org/wiki/Enterprise_resource_planning"&gt;ERP&lt;/a&gt;
 and everyone must use it to report monthly activity.
Doing this report has always been a true non-user-friendly experience. It is a
web portal written in &lt;a href="https://en.wikipedia.org/wiki/ASP.NET"&gt;ASP.net&lt;/a&gt; as the aspx
extension of the pages demonstrates. The most annoying problem is a mix of french
and english in the interface.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Date format is english style (MM/DD/YYYY) and not french style (DD/MM/YYYY)&lt;/li&gt;
&lt;li&gt;Calendar displays weeks that begins the Sunday instead of Monday&lt;/li&gt;
&lt;li&gt;Labels are in french in the interface&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="EN calendar and french labels" src="https://romainjacquet.github.io/images/bad_calendar.PNG"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="EN dates and french labels" src="https://romainjacquet.github.io/images/bad_date.PNG"&gt;&lt;/p&gt;
&lt;p&gt;My first idea was that the website have a bug. But testing on Chrome shows that
it works! I launched a debug session with Firefox and find a wrong header: 
&lt;code&gt;Accept-Language:en-US,fr-FR;q=0.7,en;q=0.3&lt;/code&gt;.
The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Language"&gt;Accept-Language header&lt;/a&gt;
 is sent by the browser to define the language of the session. The value of this header depends on
 the firefox settings language (Settings &amp;gt; Options &amp;gt; Language). In my case it was EN-US. I
 changed to &lt;code&gt;fr-fr&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="EN dates and french labels" src="https://romainjacquet.github.io/images/default_language.PNG"&gt;&lt;/p&gt;
&lt;p&gt;After restarting Firefox it works. But it clearly shows that the label of the application
are agnostic to the header &lt;code&gt;Accept-Language&lt;/code&gt; and had cause this strange mix. This is 
not a proper way of programming. Firefox version is &lt;a href="https://support.mozilla.org/en-US/products/firefox-enterprise"&gt;Firefox entreprise&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="EN dates and french labels" src="https://romainjacquet.github.io/images/firefox_version.PNG"&gt;&lt;/p&gt;
&lt;p&gt;Why do the IT guys provide a default installation with
a locale EN-US? It is possible to customize the installer and provide
a per locale installer. You just have to use the switch &lt;code&gt;lang=&lt;/code&gt; in  the 
msi installer (&lt;a href="https://support.mozilla.org/en-US/kb/deploy-firefox-msi-installers#w_configuration-options"&gt;official documentation&lt;/a&gt;)...&lt;/p&gt;</content></entry><entry><title>Useless import static in Java</title><link href="https://romainjacquet.github.io/useless-import-static-in-java.html" rel="alternate"></link><published>2019-04-09T21:00:00+02:00</published><updated>2019-04-09T21:00:00+02:00</updated><author><name>Romain JACQUET</name></author><id>tag:romainjacquet.github.io,2019-04-09:/useless-import-static-in-java.html</id><summary type="html">&lt;p&gt;Useless import static in Java&lt;/p&gt;</summary><content type="html">&lt;p&gt;This post is about Java philosophy and feature introduction in language.
Those days I develop a software piece in Java. Yeah, that is painfull
for a Python user like me. I have a basic level in Java. 
I can write Java code but I'm still thinking as it was Java 1.4.
While browsing a modern source code, I discovered the 
&lt;a href="https://docs.oracle.com/javase/1.5.0/docs/guide/language/static-import.html"&gt;&lt;code&gt;import static&lt;/code&gt; keyword&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import static&lt;/span&gt; &lt;span class="nn"&gt;java.lang.Math.E&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;E&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Before Java 1.5 and &lt;code&gt;import static&lt;/code&gt;, Java could only import packages or class. Now Java can import static members: functions or constants. 
The official documentation give two reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;avoid to declare local copies of constants;&lt;/li&gt;
&lt;li&gt;avoid inheritance abuse (Constant interface anti-pattern);&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;local copies&lt;/h3&gt;
&lt;p&gt;I agree that local copies of constant are not a good idea for the maintenance. In the future you may want to
change the constant, and having a copy is the best way to forget to modify the copy. Also having two constant
for the same value has no sense.&lt;/p&gt;
&lt;h3&gt;constant factorization&lt;/h3&gt;
&lt;p&gt;I discovered that some java developers
 &lt;strong&gt;use interface and inheritance to factorize constant usage!&lt;/strong&gt; This method is now 
 officially discouraged and the &lt;a href="https://en.wikipedia.org/wiki/Constant_interface"&gt;anti-pattern Constant interface&lt;/a&gt; is on wikipedia.&lt;/p&gt;
&lt;p&gt;Why not importing the class and use a qualified constant?
In addition, direct import of member could lead to &lt;a href="https://stackoverflow.com/questions/22903542/what-is-namespace-pollution?noredirect=1&amp;amp;lq=1"&gt;name space pollution&lt;/a&gt;. For java designer use qualified code is boilerplate code. Boilerplate is the word used in the
&lt;a href="https://docs.oracle.com/javase/1.5.0/docs/guide/language/static-import.html"&gt;changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In my opinion this feature is absolutely useless. Except under particular circumstances, I don't see any added-value.
And why do they chose to add the static keyword? The compiler could do that for you.
This example show us how the community and usage can change the langage. I'm quite
sure that if the Constant interface haven't been used, the &lt;code&gt;import static&lt;/code&gt; keyword wouldn't exist.&lt;/p&gt;</content></entry><entry><title>DNS resolution with CentOS</title><link href="https://romainjacquet.github.io/dns-resolution-with-centos.html" rel="alternate"></link><published>2019-03-28T22:13:00+01:00</published><updated>2019-03-28T22:13:00+01:00</updated><author><name>Romain JACQUET</name></author><id>tag:romainjacquet.github.io,2019-03-28:/dns-resolution-with-centos.html</id><summary type="html">&lt;p&gt;don't put more than three entries in your DNS&lt;/p&gt;</summary><content type="html">&lt;p&gt;I was trying to fix an issue on a server that use &lt;a href="https://mesosphere.github.io/mesos-dns/"&gt;mesos-dns&lt;/a&gt;.
I discovered a CentOS host with this strange configuration in &lt;code&gt;/etc/resolv.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Generated by NetworkManager
search mycorp.corp

# handle company names
nameserver 10.0.0.10
nameserver 10.0.0.11
# handle .mesos
nameserver 10.0.0.100
nameserver 10.0.0.110
nameserver 10.0.0.120
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Wow many entries. I usually found only two entries. How does it works? How the OS will choose between the different entry? What is the alogrithm?
As usual, I first read the manual with &lt;code&gt;man resolv.conf&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Up  to  MAXNS (currently  3,  see  &amp;lt;resolv.h&amp;gt;) name servers may be listed, one
per keyword.  If there are multiple servers, the resolver library queries them
in the  order  listed.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I checked in the resolver header file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;% egrep &amp;quot;define MAXNS&amp;quot; /usr/include/resolv.h&lt;/span&gt;
# &lt;span class="n"&gt;define&lt;/span&gt; &lt;span class="n"&gt;MAXNS&lt;/span&gt;          &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="o"&gt;/*&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt; # &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;servers&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ll&lt;/span&gt; &lt;span class="n"&gt;track&lt;/span&gt; &lt;span class="o"&gt;*/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Same result. So it useless to put more than three entry in your resolv.conf.
The code source of the resolver in glibc 2.12.2 show also many loop with an upper limit of MAXNS.
For exemple in res_send.c line 392:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;ns&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;MAXNS&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;ns&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So take care with /etc/resolv.conf if you put more than three nameserver, extra entries will be silently ignored.
And &lt;a href="https://en.wikipedia.org/wiki/RTFM"&gt;RTFM&lt;/a&gt; :-)&lt;/p&gt;</content></entry><entry><title>Docker registry forensic</title><link href="https://romainjacquet.github.io/docker-registry-forensic.html" rel="alternate"></link><published>2019-03-13T23:00:00+01:00</published><updated>2019-03-13T23:00:00+01:00</updated><author><name>Romain JACQUET</name></author><id>tag:romainjacquet.github.io,2019-03-13:/docker-registry-forensic.html</id><summary type="html">&lt;p&gt;forensic into the docker registry&lt;/p&gt;</summary><content type="html">&lt;p&gt;I had to debug in our container registry because something unclear happend. At office
we are using the &lt;a href="https://github.com/docker/distribution/releases/tag/v2.6.0"&gt;Docker registry v2.6.0&lt;/a&gt;
 to host
hundred of repositories. An user has complained about a missing image. The
image has been pushed, but it is no longer here... &lt;code&gt;Docker pull&lt;/code&gt; command
failed.  Our docker registry is running in docker container and
all the logs are in &lt;code&gt;docker logs&lt;/code&gt;, no persistence :-(.
Even worse there is absolutely no supervision of the service. I started to
extract the relevant logs from the docker daemon.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker logs &lt;span class="k"&gt;$(&lt;/span&gt;docker ps&lt;span class="p"&gt;|&lt;/span&gt;grep &lt;span class="s2"&gt;&amp;quot;registry:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; tr -s &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -f &lt;span class="m"&gt;1&lt;/span&gt; -d &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;grep &lt;span class="s2"&gt;&amp;quot;my-container&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;1.0.1&amp;quot;&lt;/span&gt; &amp;gt; /tmp/logs.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When looking at the logs, I found interesting patterns &lt;code&gt;filesystem.PutContent&lt;/code&gt;
and &lt;code&gt;filesystem.Delete&lt;/code&gt;. This patterns come from the docker storage driver.
Next step is to catch the deletion, this could be achieved by grepping
the HTTP DELETE message.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# egrep DELETE my-service-1.0.1.txt&lt;/span&gt;
&lt;span class="nv"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2019-03-05T10:19:55.904910006Z&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;debug &lt;span class="nv"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;filesystem.GetContent(\&amp;quot;/docker/registry/v2/repositories/corp/my-service/_manifests/tags/1.0.1/current/link\&amp;quot;)&amp;quot;&lt;/span&gt; go.version&lt;span class="o"&gt;=&lt;/span&gt;go1.7.6 http.request.host&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;corp-ssa-docker-registry:5000&amp;quot;&lt;/span&gt; http.request.id&lt;span class="o"&gt;=&lt;/span&gt;3313e9de-d9cf-4696-8b3b-7c09ca22904e http.request.method&lt;span class="o"&gt;=&lt;/span&gt;DELETE http.request.remoteaddr&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;10.0.0.2:56942&amp;quot;&lt;/span&gt; http.request.uri&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/v2/corp/my-service/manifests/sha256:640f61c7fa1bceda97c3105d20417695cd9ff29b32d4dada932bab950748c092&amp;quot;&lt;/span&gt; http.request.useragent&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;python-requests/2.4.3 CPython/3.4.2 Linux/3.10.0-514.el7.x86_64&amp;quot;&lt;/span&gt; instance.id&lt;span class="o"&gt;=&lt;/span&gt;8a995190-de4b-48a4-bbc7-0757bb249e2f &lt;span class="nv"&gt;service&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;registry trace.duration&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;.581796ms trace.file&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/go/src/github.com/docker/distribution/registry/storage/driver/base/base.go&amp;quot;&lt;/span&gt; trace.func&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;github.com/docker/distribution/registry/storage/driver/base.(*Base).GetContent&amp;quot;&lt;/span&gt; trace.id&lt;span class="o"&gt;=&lt;/span&gt;80e22948-8fd7-4f1e-8330-7da907ae5f30 trace.line&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;82&lt;/span&gt; vars.name&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;corp/my-service&amp;quot;&lt;/span&gt; vars.reference&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sha256:640f61c7fa1bceda97c3105d20417695cd9ff29b32d4dada932bab950748c092&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;v2.6.2

&lt;span class="nv"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2019-03-05T10:19:55.905819262Z&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;debug &lt;span class="nv"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;filesystem.Delete(\&amp;quot;/docker/registry/v2/repositories/corp/my-service/_manifests/tags/1.0.1\&amp;quot;)&amp;quot;&lt;/span&gt; go.version&lt;span class="o"&gt;=&lt;/span&gt;go1.7.6 http.request.host&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;corp-ssa-docker-registry:5000&amp;quot;&lt;/span&gt; http.request.id&lt;span class="o"&gt;=&lt;/span&gt;3313e9de-d9cf-4696-8b3b-7c09ca22904e http.request.method&lt;span class="o"&gt;=&lt;/span&gt;DELETE http.request.remoteaddr&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;10.0.0.2:56942&amp;quot;&lt;/span&gt; http.request.uri&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/v2/corp/my-service/manifests/sha256:640f61c7fa1bceda97c3105d20417695cd9ff29b32d4dada932bab950748c092&amp;quot;&lt;/span&gt; http.request.useragent&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;python-requests/2.4.3 CPython/3.4.2 Linux/3.10.0-514.el7.x86_64&amp;quot;&lt;/span&gt; instance.id&lt;span class="o"&gt;=&lt;/span&gt;8a995190-de4b-48a4-bbc7-0757bb249e2f &lt;span class="nv"&gt;service&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;registry trace.duration&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;760&lt;/span&gt;.721µs trace.file&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/go/src/github.com/docker/distribution/registry/storage/driver/base/base.go&amp;quot;&lt;/span&gt; trace.func&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;github.com/docker/distribution/registry/storage/driver/base.(*Base).Delete&amp;quot;&lt;/span&gt; trace.id&lt;span class="o"&gt;=&lt;/span&gt;d61e5938-5da2-4e85-bfd0-e26cc2c3fbab trace.line&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;177&lt;/span&gt; vars.name&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;corp/my-service&amp;quot;&lt;/span&gt; vars.reference&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sha256:640f61c7fa1bceda97c3105d20417695cd9ff29b32d4dada932bab950748c092&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;v2.6.2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Second line of the output tell the truth! The deletion has been done by
10.0.0.2 at 10:19 and it is probably a Python script because the user agent is
&lt;strong&gt;python-requests&lt;/strong&gt;. So do not be afraid of going inside docker registry logs,
forensic is possible. But I would
expect to find an easier solution with &lt;a href="https://github.com/kwk/docker-registry-frontend"&gt;docker
frontend&lt;/a&gt;.  Unfortunately this
project has not been updated since July 6th, 2017. It is written in
&lt;a href="https://en.wikipedia.org/wiki/AngularJS"&gt;AngularJS&lt;/a&gt;, it may be a problem to
find new contributor, because
&lt;a href="https://en.wikipedia.org/wiki/Angular_(web_framework)"&gt;Angular&lt;/a&gt; has been
rewritten with the version 2.x. I hope docker-registry-frontend will find a
honorable successor or at least new maintener.&lt;/p&gt;</content></entry><entry><title>Zabbix Agent on centos 7.3 (2/2)</title><link href="https://romainjacquet.github.io/zabbix-agent-on-centos-73-22.html" rel="alternate"></link><published>2019-03-11T19:00:00+01:00</published><updated>2019-03-11T19:00:00+01:00</updated><author><name>Romain JACQUET</name></author><id>tag:romainjacquet.github.io,2019-03-11:/zabbix-agent-on-centos-73-22.html</id><summary type="html">&lt;p&gt;installing zabbix on CentOS 7.3 (2/2)&lt;/p&gt;</summary><content type="html">&lt;p&gt;I finished the previous post with a catastrophic situation: the VM didn't boot.
I read on the internet that adding "selinux=0" on the kernel command line could fix it.
Disabling SELinux from the kernel command line is interesting because SELinux is disabled
at the early beginning of the boot process. So event if you have a broken configuration of
SELinux, you can bypass it and boot.
Below is the official definition of the kernel argument:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; selinux=        [SELINUX] Disable or enable SELinux at boot time.
                        Format: { &amp;quot;0&amp;quot; | &amp;quot;1&amp;quot; }
                        See security/selinux/Kconfig help text.
                        0 -- disable.
                        1 -- enable.
                        Default value is set via kernel config option.
                        If enabled at boot time, /selinux/disable can be used
                        later to disable prior to initial policy load.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I reboot the server and edit the command line to append "selinux=0".
I checked the content of /etc/selinux.config:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#     enforcing - SELinux security policy is enforced.
#     permissive - SELinux prints warnings instead of enforcing.
#     disabled - No SELinux policy is loaded.
SELINUX=enforcing
# SELINUXTYPE= can take one of three two values:
#     targeted - Targeted processes are protected,
#     minimum - Modification of targeted policy. Only selected processes are protected.
#     mls - Multi Level Security protection.
SELINUXTYPE=disabled
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Damn it! SELINUXTYPE contains invalid value. This is the cause of the boot failure. After
replacing SELINUX=enforcing by SELINUX=disabled and SELINUXTYPE=disabled by SELINUXTYPE=targeted, boot is fine.&lt;/p&gt;
&lt;h2&gt;final note&lt;/h2&gt;
&lt;p&gt;A better solution is available to fix and respect SELinux:
&lt;a href="https://www.mangeek.com/2017/03/using-zabbix-3-2-with-centos-and-selinux/"&gt;Man geek Zabbix and SeLinux&lt;/a&gt;
It uses the python utils &lt;a href="https://github.com/SELinuxProject/selinux/tree/master/python/audit2allow"&gt;audit2allow&lt;/a&gt;
which is part of the SELinux project. Other people says that just upgrading the SELinux policy solved the problem
but I didn't take the risk.&lt;/p&gt;</content></entry><entry><title>Zabbix Agent on centos 7.3 (1/2)</title><link href="https://romainjacquet.github.io/zabbix-agent-on-centos-73-12.html" rel="alternate"></link><published>2019-03-08T16:00:00+01:00</published><updated>2019-03-08T16:00:00+01:00</updated><author><name>Romain JACQUET</name></author><id>tag:romainjacquet.github.io,2019-03-08:/zabbix-agent-on-centos-73-12.html</id><summary type="html">&lt;p&gt;installing zabbix on CentOS 7.3&lt;/p&gt;</summary><content type="html">&lt;p&gt;I was working on a simple and unrisky admin task: connecting a server to our
monitoring system (&lt;a href="https://www.zabbix.com/"&gt;zabbix&lt;/a&gt;). A perfect no-brainer to
finish the week. The server is a CentOS 7.3 and has been installed in old-style
with no configuration management :-(. I grab  the last version of the Zabbix
agent on the Internet and install it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-agent-4.0.3-1.el7.x86_64.rpm
rpm -i zabbix-agent-4.0.3-1.el7.x86_64.rpm
systemctl daemon-reload
systemctl start zabbix-agent
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Things didn't go as expected. Zabbix agent was not running. I discover a mismatch between pid file declared in Zabbix configuration and the one .&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; egrep pid /etc/zabbix/zabbix_agentd.conf
&lt;span class="c1"&gt;# PidFile=/tmp/zabbix_agentd.pid&lt;/span&gt;
&lt;span class="nv"&gt;PidFile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/run/zabbix/zabbix_agentd.pid
 egrep pid /usr/lib/systemd/system/zabbix-agent.service
&lt;span class="nv"&gt;PIDFile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/run/zabbix/zabbix_agentd.pid
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I fix it by customizing the systemd unit and set the correct path for the PID file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp /usr/lib/systemd/system/zabbix-agent.service /etc/systemd/system
sed -i s&lt;span class="p"&gt;|&lt;/span&gt;/run&lt;span class="p"&gt;|&lt;/span&gt;/var/run&lt;span class="p"&gt;|&lt;/span&gt; /etc/systemd/system/zabbix-agent.service
systemctl restart zabbix-agent
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Arg! It still do not work.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;journalctl -u zabbix-agent
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="m"&gt;24518&lt;/span&gt;:20190308:160332.924 using configuration file: /etc/zabbix/zabbix_agentd.conf
 &lt;span class="m"&gt;24518&lt;/span&gt;:20190308:160332.924 cannot &lt;span class="nb"&gt;set&lt;/span&gt; resource limit: &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;13&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; Permission denied
 &lt;span class="m"&gt;24518&lt;/span&gt;:20190308:160332.924 cannot disable core dump, exiting...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;What? Why Zabbix want disable the core dump. Are they so confident that the
software never crashed? :-) Anyway. I checked ulimit: fine. I finally found a
relevant entry in the SELinux log:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;AVC &lt;span class="nv"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;audit&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1552057474&lt;/span&gt;.427:23308&lt;span class="o"&gt;)&lt;/span&gt;: avc:  denied  &lt;span class="o"&gt;{&lt;/span&gt; setrlimit &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;  &lt;span class="nv"&gt;pid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;24560&lt;/span&gt; &lt;span class="nv"&gt;comm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zabbix_agentd&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;scontext&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;system_u:system_r:zabbix_agent_t:s0 &lt;span class="nv"&gt;tcontext&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;system_u:system_r:zabbix_agent_t:s0 &lt;span class="nv"&gt;tclass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;process
&lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;SYSCALL &lt;span class="nv"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;audit&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1552057474&lt;/span&gt;.427:23308&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="nv"&gt;arch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;c000003e &lt;span class="nv"&gt;syscall&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;160&lt;/span&gt; &lt;span class="nv"&gt;success&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;no &lt;span class="nv"&gt;exit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-13 &lt;span class="nv"&gt;a0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="nv"&gt;a1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;7ffc3c5ff9b0 &lt;span class="nv"&gt;a2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;a3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="nv"&gt;items&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;ppid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;24559&lt;/span&gt; &lt;span class="nv"&gt;pid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;24560&lt;/span&gt; &lt;span class="nv"&gt;auid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4294967295&lt;/span&gt; &lt;span class="nv"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;996&lt;/span&gt; &lt;span class="nv"&gt;gid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;992&lt;/span&gt; &lt;span class="nv"&gt;euid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;996&lt;/span&gt; &lt;span class="nv"&gt;suid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;996&lt;/span&gt; &lt;span class="nv"&gt;fsuid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;996&lt;/span&gt; &lt;span class="nv"&gt;egid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;992&lt;/span&gt; &lt;span class="nv"&gt;sgid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;992&lt;/span&gt; &lt;span class="nv"&gt;fsgid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;992&lt;/span&gt; &lt;span class="nv"&gt;tty&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;none&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;ses&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4294967295&lt;/span&gt; &lt;span class="nv"&gt;comm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zabbix_agentd&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;exe&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/sbin/zabbix_agentd&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;subj&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;system_u:system_r:zabbix_agent_t:s0 &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;null&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;SELinux rules are not known as readable and user friendly. So I choose to
disabled SELinux. It is acceptable for an internal server. I edit the file in
/etc and reboot. It took a very long time that alert me that something goes
wrong. I went to the WMWare console and discovered the failure:
&lt;img alt="Alt Text" src="https://romainjacquet.github.io/images/SELinuxfailed.PNG"&gt;&lt;/p&gt;
&lt;p&gt;It was supposed to be a no-brainer, not a &lt;strong&gt;complete&lt;/strong&gt; failure! Solution at the next post.&lt;/p&gt;</content></entry><entry><title>Python low-level and ioctl</title><link href="https://romainjacquet.github.io/python-low-level-and-ioctl.html" rel="alternate"></link><published>2019-02-21T19:33:00+01:00</published><updated>2019-02-21T19:33:00+01:00</updated><author><name>Romain JACQUET</name></author><id>tag:romainjacquet.github.io,2019-02-21:/python-low-level-and-ioctl.html</id><summary type="html">&lt;p&gt;playing with ioctl in Python&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm using Python since 2006 and I still discovered gems inside. Yesterday I
need to read the DVB card status to find if the acquisition is fine. The status
is provided by the DVB driver which is a set a of kernel modules. The DVB Card
status could be read using the &lt;a href="https://www.linuxtv.org/docs/dvbapi/DVB_Frontend_API.html"&gt;DVB API&lt;/a&gt; of the kernel. Using old-style C and
&lt;a href="https://linux.die.net/man/2/ioctl"&gt;ioctl&lt;/a&gt; function , this could be achieved using this lines:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;fe_status_t&lt;/span&gt; &lt;span class="n"&gt;my_status&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ioctl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FE_READ_STATUS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;my_status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It works. But my software is written in Python and I don't want to write a
binding. C-binding is possible but painful compared of writing pure Python. How
to translate this code into Python? Official documentation talks about &lt;a href="https://docs.python.org/2/library/fcntl.html"&gt;fcntl
module&lt;/a&gt; but the description of the usage is not simple. I try this code in
Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# f previously open&lt;/span&gt;

&lt;span class="n"&gt;ret_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;fcntl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ioctl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ret_status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;My first attempt failed, resulting in an exception "Operation not permitted". Hum, wait a minute I remembered that ioctl system call is unique among all drivers. I looked more carefully the definition of FE_READ_STATUS in the kernel headers in the file ./include/linux/dvb/frontend.h .&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#define FE_READ_STATUS                   _IOR(&amp;#39;o&amp;#39;, 69, fe_status_t)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;_IOR is a macro in the kernel to create unique IOCTL number. I didn't understand all the logic behind. Using a C program I successfully display the real number of the IOCTL FE_READ_STATUS.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;REAL VALUE %08x&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FE_READ_STATUS&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the final function to get status is now easy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_dvb_locked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;adapter_name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;adapter_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rw&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ret_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;fcntl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ioctl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x80046f45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ret_status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ret_status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;locked &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x10&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;KeyError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Unknown status &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Definitely Python is "batteries included" and even for low-level Python could do the job. See &lt;a href="https://www.python.org/dev/peps/pep-0206/"&gt;PEP 206&lt;/a&gt; for more information about "batteries included".&lt;/p&gt;</content></entry></feed>