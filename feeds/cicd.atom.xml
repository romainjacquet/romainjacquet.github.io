<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Deep in the system - ci/cd</title><link href="https://romainjacquet.github.io/" rel="alternate"></link><link href="https://romainjacquet.github.io/feeds/cicd.atom.xml" rel="self"></link><id>https://romainjacquet.github.io/</id><updated>2019-04-24T20:13:00+02:00</updated><entry><title>Branch indexing failure in Jenkins</title><link href="https://romainjacquet.github.io/branch-indexing-failure-in-jenkins.html" rel="alternate"></link><published>2019-04-24T20:13:00+02:00</published><updated>2019-04-24T20:13:00+02:00</updated><author><name>Romain JACQUET</name></author><id>tag:romainjacquet.github.io,2019-04-24:/branch-indexing-failure-in-jenkins.html</id><summary type="html">&lt;p&gt;corrupted git config files lead to branch indexing failure&lt;/p&gt;</summary><content type="html">&lt;p&gt;As usual, CI/CD anomalies are always a source for blogging. And also a 
way of improving the reliability of the CI system. A user
has complained of Jenkins branch indexing failure. The branch indexing is a feature of
&lt;a href="https://jenkins.io/doc/book/pipeline/multibranch/"&gt;Multibranch pipeline&lt;/a&gt; that discover new branches
and delete old branches. 
Instead of index branches, the user got a fancy java stack :-). &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;java.lang.IllegalArgumentException: Repository config file /home/jenkins/caches/git-46ca6ff4bea60131b71f18bc70a1dd5f/.git/config invalid Cannot read file /home/jenkins/caches/git-46ca6ff4bea60131b71f18bc70a1dd5f/.git/config
    at org.eclipse.jgit.lib.BaseRepositoryBuilder.loadConfig(BaseRepositoryBuilder.java:687)
    at org.eclipse.jgit.lib.BaseRepositoryBuilder.getConfig(BaseRepositoryBuilder.java:662)
    at org.eclipse.jgit.lib.BaseRepositoryBuilder.guessWorkTreeOrFail(BaseRepositoryBuilder.java:698)
    at org.eclipse.jgit.lib.BaseRepositoryBuilder.setupWorkTree(BaseRepositoryBuilder.java:628)
    at org.eclipse.jgit.lib.BaseRepositoryBuilder.setup(BaseRepositoryBuilder.java:557)
    at org.eclipse.jgit.storage.file.FileRepositoryBuilder.build(FileRepositoryBuilder.java:92)
    at org.eclipse.jgit.storage.file.FileRepositoryBuilder.create(FileRepositoryBuilder.java:111)
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.getRepository(CliGitAPIImpl.java:2336)
    at hudson.plugins.git.GitAPI.getRepository(GitAPI.java:269)
    at jenkins.plugins.git.AbstractGitSCMSource.retrieve(AbstractGitSCMSource.java:234)
    at jenkins.scm.api.SCMSource.fetch(SCMSource.java:148)
    at jenkins.branch.MultiBranchProject.computeChildren(MultiBranchProject.java:294)
    at com.cloudbees.hudson.plugins.folder.computed.ComputedFolder.updateChildren(ComputedFolder.java:157)
    at com.cloudbees.hudson.plugins.folder.computed.FolderComputation.run(FolderComputation.java:122)
    at hudson.model.ResourceController.execute(ResourceController.java:98)
    at hudson.model.Executor.run(Executor.java:404)
Finished: FAILURE
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Checking the config file shows a corruption. This file is a classic git file that you 
have when you clone a repository. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    url = ssh://user@tuleap/repo.git
[remote &amp;quot;origin&amp;quot;]
    url = ssh://user@tuleap/repo.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first line shoud be included in a remote
section. Having two remote sections in git is common but not for CI usage.
I wrote a script to detect broken config:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nv"&gt;GIT_CONFIG_FILES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;find /home/jenkins/caches -mindepth &lt;span class="m"&gt;3&lt;/span&gt; -maxdepth &lt;span class="m"&gt;3&lt;/span&gt; -name config&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; f in &lt;span class="nv"&gt;$GIT_CONFIG_FILES&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="nv"&gt;FIRST_LINE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;head -n &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$FIRST_LINE&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[core]&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;then&lt;/span&gt;
                &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;------------------------------------------------------&amp;quot;&lt;/span&gt;
                &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Suspicious config file &lt;/span&gt;&lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
                head &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
                &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$((&lt;/span&gt;i+1&lt;span class="k"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Found &lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="s2"&gt; suspicious files&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Fixing the file is easy.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add the missing lines by reading the beginning of the file in a fresh clone;&lt;/li&gt;
&lt;li&gt;Remove the first line which is obviously invalid;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The correct config file is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[core]&lt;/span&gt;
    &lt;span class="na"&gt;repositoryformatversion&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;0&lt;/span&gt;
&lt;span class="s"&gt;    filemode = true&lt;/span&gt;
&lt;span class="s"&gt;    bare = false&lt;/span&gt;
&lt;span class="s"&gt;    logallrefupdates = true&lt;/span&gt;
&lt;span class="k"&gt;[remote &amp;quot;origin&amp;quot;]&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;ssh://user@tuleap/repo.git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I'm still wondering who has corrupted the files. The strange thing is that 
JGIT is visible in  the stack even if my job was supposed to use the git client 
configuration. &lt;/p&gt;</content></entry><entry><title>Docker registry forensic</title><link href="https://romainjacquet.github.io/docker-registry-forensic.html" rel="alternate"></link><published>2019-03-13T23:00:00+01:00</published><updated>2019-03-13T23:00:00+01:00</updated><author><name>Romain JACQUET</name></author><id>tag:romainjacquet.github.io,2019-03-13:/docker-registry-forensic.html</id><summary type="html">&lt;p&gt;forensic into the docker registry&lt;/p&gt;</summary><content type="html">&lt;p&gt;I had to debug in our container registry because something unclear happend. At office
we are using the &lt;a href="https://github.com/docker/distribution/releases/tag/v2.6.0"&gt;Docker registry v2.6.0&lt;/a&gt;
 to host
hundred of repositories. An user has complained about a missing image. The
image has been pushed, but it is no longer here... &lt;code&gt;Docker pull&lt;/code&gt; command
failed.  Our docker registry is running in docker container and
all the logs are in &lt;code&gt;docker logs&lt;/code&gt;, no persistence :-(.
Even worse there is absolutely no supervision of the service. I started to
extract the relevant logs from the docker daemon.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker logs &lt;span class="k"&gt;$(&lt;/span&gt;docker ps&lt;span class="p"&gt;|&lt;/span&gt;grep &lt;span class="s2"&gt;&amp;quot;registry:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; tr -s &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -f &lt;span class="m"&gt;1&lt;/span&gt; -d &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;grep &lt;span class="s2"&gt;&amp;quot;my-container&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;1.0.1&amp;quot;&lt;/span&gt; &amp;gt; /tmp/logs.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When looking at the logs, I found interesting patterns &lt;code&gt;filesystem.PutContent&lt;/code&gt;
and &lt;code&gt;filesystem.Delete&lt;/code&gt;. This patterns come from the docker storage driver.
Next step is to catch the deletion, this could be achieved by grepping
the HTTP DELETE message.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# egrep DELETE my-service-1.0.1.txt&lt;/span&gt;
&lt;span class="nv"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2019-03-05T10:19:55.904910006Z&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;debug &lt;span class="nv"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;filesystem.GetContent(\&amp;quot;/docker/registry/v2/repositories/corp/my-service/_manifests/tags/1.0.1/current/link\&amp;quot;)&amp;quot;&lt;/span&gt; go.version&lt;span class="o"&gt;=&lt;/span&gt;go1.7.6 http.request.host&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;corp-ssa-docker-registry:5000&amp;quot;&lt;/span&gt; http.request.id&lt;span class="o"&gt;=&lt;/span&gt;3313e9de-d9cf-4696-8b3b-7c09ca22904e http.request.method&lt;span class="o"&gt;=&lt;/span&gt;DELETE http.request.remoteaddr&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;10.0.0.2:56942&amp;quot;&lt;/span&gt; http.request.uri&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/v2/corp/my-service/manifests/sha256:640f61c7fa1bceda97c3105d20417695cd9ff29b32d4dada932bab950748c092&amp;quot;&lt;/span&gt; http.request.useragent&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;python-requests/2.4.3 CPython/3.4.2 Linux/3.10.0-514.el7.x86_64&amp;quot;&lt;/span&gt; instance.id&lt;span class="o"&gt;=&lt;/span&gt;8a995190-de4b-48a4-bbc7-0757bb249e2f &lt;span class="nv"&gt;service&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;registry trace.duration&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;.581796ms trace.file&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/go/src/github.com/docker/distribution/registry/storage/driver/base/base.go&amp;quot;&lt;/span&gt; trace.func&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;github.com/docker/distribution/registry/storage/driver/base.(*Base).GetContent&amp;quot;&lt;/span&gt; trace.id&lt;span class="o"&gt;=&lt;/span&gt;80e22948-8fd7-4f1e-8330-7da907ae5f30 trace.line&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;82&lt;/span&gt; vars.name&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;corp/my-service&amp;quot;&lt;/span&gt; vars.reference&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sha256:640f61c7fa1bceda97c3105d20417695cd9ff29b32d4dada932bab950748c092&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;v2.6.2

&lt;span class="nv"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2019-03-05T10:19:55.905819262Z&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;debug &lt;span class="nv"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;filesystem.Delete(\&amp;quot;/docker/registry/v2/repositories/corp/my-service/_manifests/tags/1.0.1\&amp;quot;)&amp;quot;&lt;/span&gt; go.version&lt;span class="o"&gt;=&lt;/span&gt;go1.7.6 http.request.host&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;corp-ssa-docker-registry:5000&amp;quot;&lt;/span&gt; http.request.id&lt;span class="o"&gt;=&lt;/span&gt;3313e9de-d9cf-4696-8b3b-7c09ca22904e http.request.method&lt;span class="o"&gt;=&lt;/span&gt;DELETE http.request.remoteaddr&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;10.0.0.2:56942&amp;quot;&lt;/span&gt; http.request.uri&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/v2/corp/my-service/manifests/sha256:640f61c7fa1bceda97c3105d20417695cd9ff29b32d4dada932bab950748c092&amp;quot;&lt;/span&gt; http.request.useragent&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;python-requests/2.4.3 CPython/3.4.2 Linux/3.10.0-514.el7.x86_64&amp;quot;&lt;/span&gt; instance.id&lt;span class="o"&gt;=&lt;/span&gt;8a995190-de4b-48a4-bbc7-0757bb249e2f &lt;span class="nv"&gt;service&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;registry trace.duration&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;760&lt;/span&gt;.721µs trace.file&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/go/src/github.com/docker/distribution/registry/storage/driver/base/base.go&amp;quot;&lt;/span&gt; trace.func&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;github.com/docker/distribution/registry/storage/driver/base.(*Base).Delete&amp;quot;&lt;/span&gt; trace.id&lt;span class="o"&gt;=&lt;/span&gt;d61e5938-5da2-4e85-bfd0-e26cc2c3fbab trace.line&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;177&lt;/span&gt; vars.name&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;corp/my-service&amp;quot;&lt;/span&gt; vars.reference&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sha256:640f61c7fa1bceda97c3105d20417695cd9ff29b32d4dada932bab950748c092&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;v2.6.2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Second line of the output tell the truth! The deletion has been done by
10.0.0.2 at 10:19 and it is probably a Python script because the user agent is
&lt;strong&gt;python-requests&lt;/strong&gt;. So do not be afraid of going inside docker registry logs,
forensic is possible. But I would
expect to find an easier solution with &lt;a href="https://github.com/kwk/docker-registry-frontend"&gt;docker
frontend&lt;/a&gt;.  Unfortunately this
project has not been updated since July 6th, 2017. It is written in
&lt;a href="https://en.wikipedia.org/wiki/AngularJS"&gt;AngularJS&lt;/a&gt;, it may be a problem to
find new contributor, because
&lt;a href="https://en.wikipedia.org/wiki/Angular_(web_framework)"&gt;Angular&lt;/a&gt; has been
rewritten with the version 2.x. I hope docker-registry-frontend will find a
honorable successor or at least new maintener.&lt;/p&gt;</content></entry></feed>